<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="62d6b939-c159-442f-a9ef-11d9a1baf1bc" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>Maven</name>
  <description>Checks Maven project is configured correctly</description>
  <settings>
    <options>
      <option name="artifactRules" value="%FILE_UNUSED_PROPERTIES%" />
      <option name="checkoutMode" value="ON_SERVER" />
      <option name="cleanBuild" value="true" />
    </options>
    <parameters>
      <param name="DIR__MAVEN_CHECK_SCRIPTS" value="check-rules/maven-check-scripts" spec="text display='hidden' validationMode='any'" />
      <param name="ERROR_TEXT__PROPERTIES_SECTION" value="[ERROR] Found &lt;properties&gt; section" spec="text display='hidden' validationMode='any'" />
      <param name="ERROR_TEXT__UNSORTED_MODULES" value="[ERROR] Modules are in unsorted order" spec="text display='hidden' validationMode='any'" />
      <param name="ERROR_TEXT__UNUSED_DECLARATION" value="[ERROR] Found unused declaration" spec="text display='hidden' validationMode='any'" />
      <param name="ERROR_TEXT__UNUSED_PROPERTY" value="[ERROR] Found unused property" spec="text display='hidden' validationMode='any'" />
      <param name="ERROR_TEXT__VERSION_IN_NON_PARENT_POM" value="[ERROR] Found version in non parent pom" spec="text display='hidden' validationMode='any'" />
      <param name="FILE_UNUSED_PROPERTIES" value="unused-properties.txt" spec="text display='hidden' validationMode='any'" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_107" name="Check dependency and plugin versions not in parent" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/usr/bin/env bash
set -o nounset; set -o errexit; set -o pipefail; set -o errtrace; set -o functrace
set -x


FILE__MAVEN_CHECK_SCRIPT="%DIR__MAVEN_CHECK_SCRIPTS%/CheckDependencyAndPluginVersionsNotInParent.sh"
if [ -f "${FILE__MAVEN_CHECK_SCRIPT}" ]; then
	bash -x "${FILE__MAVEN_CHECK_SCRIPT}"
else
	find . -name "pom.xml" |  \
	  grep -v parent | \
	  while read -r pom; do
	    for xpath in "project/dependencies/dependency/version" \
	                 "project/build/plugins/plugin/version" \
	                 "project/profiles/profile/build/plugins/plugin/version"; do
			if xpath -e "${xpath}" ${pom} 2>&1 | \
	          grep -qE "^Found"; then
	        	echo "%ERROR_TEXT__VERSION_IN_NON_PARENT_POM%: ${pom}"
			fi
	    done
	done
fi]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_111" name="Check unused dependencies and plugins in parent" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/usr/bin/env bash
set -o nounset; set -o errexit; set -o pipefail; set -o errtrace; set -o functrace
set -x


FILE__MAVEN_CHECK_SCRIPT="%DIR__MAVEN_CHECK_SCRIPTS%/CheckUnusedDependenciesAndPluginsInParent.sh"
if [ -f "${FILE__MAVEN_CHECK_SCRIPT}" ]; then
	bash -x "${FILE__MAVEN_CHECK_SCRIPT}"
else
	POMS=$(find . -name pom.xml | grep -v parent)
	for xpath in "project/dependencyManagement/dependencies/dependency/artifactId/text()" \
	             "project/build/pluginManagement/plugins/plugin/artifactId/text()"; do
		xpath -e "${xpath}" parent/pom.xml 2>&1 | \
	      grep -vE '(NODE|Found)' | \
	      while read -r declaration; do
	        FOUND=false
	        for pom in ${POMS}; do
	        	if grep -E "<artifactId>${declaration}</artifactId>" "${pom}"; then
	            	FOUND=true
	                continue 2
	            fi
	        done
	        for parent_xpath in "project/build/plugins" \
	                            "project/dependencies"; do
	            if xpath -e "${parent_xpath}" parent/pom.xml 2>&1 | \
	              grep -E "<" | \
	              grep -E "<artifactId>${declaration}</artifactId>"; then
	              	FOUND=true
	                continue 2
	            fi
	        done
	        if [ "${FOUND}" == "false" ]; then
	            echo "${declaration}" >> %FILE_UNUSED_PROPERTIES%
	            echo "%ERROR_TEXT__UNUSED_DECLARATION%: ${declaration}"
	        fi
	    done
	done
fi]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_109" name="Check properties not in parent" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/usr/bin/env bash
set -o nounset; set -o errexit; set -o pipefail; set -o errtrace; set -o functrace
set -x


FILE__MAVEN_CHECK_SCRIPT="%DIR__MAVEN_CHECK_SCRIPTS%/CheckPropertiesNotInParent.sh"
if [ -f "${FILE__MAVEN_CHECK_SCRIPT}" ]; then
	bash -x "${FILE__MAVEN_CHECK_SCRIPT}"
else
	find . -name "pom.xml" | \
	  grep -v parent | \
	  while read -r pom; do
	      if grep '<properties>' "${pom}"; then
	          echo "%ERROR_TEXT__PROPERTIES_SECTION%: ${pom}"
	      fi
	done
fi]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_108" name="Check unused properties" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/usr/bin/env bash
set -o nounset; set -o errexit; set -o pipefail; set -o errtrace; set -o functrace
set -x


FILE__MAVEN_CHECK_SCRIPT="%DIR__MAVEN_CHECK_SCRIPTS%/CheckUnusedProperties.sh"
if [ -f "${FILE__MAVEN_CHECK_SCRIPT}" ]; then
	bash -x "${FILE__MAVEN_CHECK_SCRIPT}"
else
	POMS=$(find . -name pom.xml)
	xpath -e "project/properties/*" parent/pom.xml 2>&1 | \
	  grep -E "^<.*\.version>" | \
	  sed -r 's|<(.*)>.*<\/.*>|\1|' | \
	  while read -r property; do
	    FOUND=false
	    for pom in ${POMS}; do
	        if grep -qE "\\$.*${property}" "${pom}"; then
	            FOUND=true
   	     fi
	    done
	    if [ "${FOUND}" == "false" ]; then
   	    	echo "${property}" > %FILE_UNUSED_PROPERTIES%
	        echo "%ERROR_TEXT__UNUSED_PROPERTY%: ${property}"
	    fi
	done
fi]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_39" name="Check modules in root pom.xml are sorted" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/usr/bin/env bash
set -o nounset; set -o errexit; set -o pipefail; set -o errtrace; set -o functrace
set -x


FILE__MAVEN_CHECK_SCRIPT="%DIR__MAVEN_CHECK_SCRIPTS%/CheckModulesInRootPomAreSorted.sh"
if [ -f "${FILE__MAVEN_CHECK_SCRIPT}" ]; then
	bash -x "${FILE__MAVEN_CHECK_SCRIPT}"
else
	xpath -e "project/modules/module/text()" pom.xml 2>/dev/null > current-list
	cat current-list | sort -h > sorted-list
	DIFF="$(diff current-list sorted-list || true)"
	if [ "${DIFF}" != "" ]; then
		echo "%ERROR_TEXT__UNSORTED_MODULES%:"
	    echo "${DIFF}"
	fi
fi]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_86" name="Check that project is successfully built with -Dmaven.test.skip flag" type="Maven2">
        <parameters>
          <param name="goals" value="package" />
          <param name="localRepoScope" value="mavenDefault" />
          <param name="maven.path" value="%teamcity.tool.maven.DEFAULT%" />
          <param name="pomLocation" value="pom.xml" />
          <param name="runnerArgs" value="-Dmaven.test.skip" />
          <param name="target.jdk.home" value="%env.JDK_ORA_11%" />
          <param name="teamcity.coverage.emma.include.source" value="true" />
          <param name="teamcity.coverage.emma.instr.parameters" value="-ix -*Test*" />
          <param name="teamcity.coverage.idea.includePatterns" value="*" />
          <param name="teamcity.coverage.jacoco.patterns" value="+:*" />
          <param name="teamcity.step.mode" value="default" />
          <param name="teamcity.tool.jacoco" value="%teamcity.tool.jacoco.DEFAULT%" />
          <param name="userSettingsSelection" value="local-proxy.xml" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="GitHubApacheIgnite3" />
    </vcs-settings>
    <requirements>
      <equals id="RQ_11" name="teamcity.agent.jvm.os.name" value="Linux" />
    </requirements>
    <build-triggers />
    <build-extensions>
      <extension id="BUILD_EXT_6" type="BuildFailureOnMessage">
        <parameters>
          <param name="buildFailureOnMessage.conditionType" value="contains" />
          <param name="buildFailureOnMessage.messagePattern" value="%ERROR_TEXT__PROPERTIES_SECTION%" />
          <param name="buildFailureOnMessage.outputText" value="%ERROR_TEXT__PROPERTIES_SECTION%" />
          <param name="buildFailureOnMessage.reverse" value="false" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_7" type="BuildFailureOnMessage">
        <parameters>
          <param name="buildFailureOnMessage.conditionType" value="contains" />
          <param name="buildFailureOnMessage.messagePattern" value="%ERROR_TEXT__UNSORTED_MODULES%" />
          <param name="buildFailureOnMessage.outputText" value="%ERROR_TEXT__UNSORTED_MODULES%" />
          <param name="buildFailureOnMessage.reverse" value="false" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_8" type="BuildFailureOnMessage">
        <parameters>
          <param name="buildFailureOnMessage.conditionType" value="contains" />
          <param name="buildFailureOnMessage.messagePattern" value="%ERROR_TEXT__UNUSED_DECLARATION%" />
          <param name="buildFailureOnMessage.outputText" value="%ERROR_TEXT__UNUSED_DECLARATION%" />
          <param name="buildFailureOnMessage.reverse" value="false" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_9" type="BuildFailureOnMessage">
        <parameters>
          <param name="buildFailureOnMessage.conditionType" value="contains" />
          <param name="buildFailureOnMessage.messagePattern" value="%ERROR_TEXT__UNUSED_PROPERTY%" />
          <param name="buildFailureOnMessage.outputText" value="%ERROR_TEXT__UNUSED_PROPERTY%" />
          <param name="buildFailureOnMessage.reverse" value="false" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_10" type="BuildFailureOnMessage">
        <parameters>
          <param name="buildFailureOnMessage.conditionType" value="contains" />
          <param name="buildFailureOnMessage.messagePattern" value="%ERROR_TEXT__VERSION_IN_NON_PARENT_POM%" />
          <param name="buildFailureOnMessage.outputText" value="%ERROR_TEXT__VERSION_IN_NON_PARENT_POM%" />
          <param name="buildFailureOnMessage.reverse" value="false" />
        </parameters>
      </extension>
    </build-extensions>
    <cleanup />
  </settings>
</build-type>

