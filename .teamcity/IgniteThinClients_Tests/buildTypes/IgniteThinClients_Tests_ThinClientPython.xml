<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="df25be87-5892-49fb-b3bb-f8b4242de632" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>Thin client: Python</name>
  <description />
  <settings>
    <inherits>
      <ref id="Tests_IgniteThinClients_PreBuild" />
      <ref id="RunPythonTestsBasic" />
      <ref id="Tests_IgniteThinClients_PostBuild" />
    </inherits>
    <options>
      <option name="artifactRules" value="work/log/** =&gt; logs.zip" />
      <option name="checkoutMode" value="ON_AGENT" />
      <option name="executionTimeoutMin" value="30" />
    </options>
    <disabled-settings>
      <setting-ref ref="RUNNER_91" />
      <setting-ref ref="RUNNER_92" />
      <setting-ref ref="RUNNER_94" />
    </disabled-settings>
    <parameters>
      <param name="IGNITE_INIT_TIME" value="60" spec="text display='hidden' validationMode='any'" />
      <param name="env.APACHE_IGNITE_CLIENT_DEBUG" value="false" spec="text display='hidden' validationMode='any'" />
      <param name="env.APACHE_IGNITE_CLIENT_ENDPOINTS" value="127.0.0.1:10800" spec="text display='hidden' validationMode='any'" />
      <param name="env.IGNITE_HOME" value="%system.teamcity.build.checkoutDir%" spec="text display='hidden' validationMode='any'" />
    </parameters>
    <build-runners order="RUNNER_264, RUNNER_287, RUNNER_90, RUNNER_91, RUNNER_92, RUNNER_94, RUNNER_266">
      <runner id="RUNNER_264" name="Pre-build cleanup" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[:<<BATCH


:: ==================== CMD =====================
@echo on
exit /b
BATCH


#  ==================== SH ======================
set -x


# Pre-clean info
echo "User: $(whoami)"
echo "JPS (before): "
for process in $(%env.JAVA_HOME%/bin/jps)
do
    echo "    ${process}"
done
echo

# Kill processes
echo "Killing processes starters"
for processName in GridHadoopExternalProcessStarter HadoopExternalProcessStarter MainWithArgsInFile
do
    for PID in $(%env.JAVA_HOME%/bin/jps | grep ${processName} | awk '{ print $1 }')
    do
        echo -n "    Killing ${processName} process with PID ${PID}... "
        processInfo="$(ps aux -p $PID)"
        kill -9 ${PID} && echo "[OK]" || {
            echo "[ERROR] Unable to kill process ${PID}" && exit 1
        }
        echo "        Killed process info: ${processInfo}"
    done
done
echo
echo "Killing IgniteNodeRunner processes (before tests)"
for PID in $(%env.JAVA_HOME%/bin/jps | grep IgniteNodeRunner | awk '{ print $1 }')
do
    echo -n "    Killing process with PID ${PID}... "
    kill -9 ${PID} && echo "[OK]" || {
        echo "[ERROR] Unable to kill process ${PID}" && exit 1
    }
done
echo

# Post-clean info
echo "JPS (after): "
for process in $(%env.JAVA_HOME%/bin/jps)
do
    echo "    ${process}"
done
echo

# ULimit
ulimit -n 65535 && echo "Max number of OPEN FILE DESCRIPTORS:           $(ulimit -n)"
ulimit -u 65535 && echo "Max number of SINGLE USER AVAILABLE PROCESSES: $(ulimit -u)"
echo

# Finalize IPC cleaning
echo "Cleaning IPC resources"
for param in m s
do
    for ipcs in $(ipcs -${param} | grep 'teamcity' | awk '{ print $2 }')
    do
        ipcrm -${param} ${ipcs} || {
            echo "[ERROR] Unable to remove ${param}/${ipcs}" && exit 1
        }
    done
done]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_287" name="Install built artifacts to local maven repository" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[:<<BATCH


:: ==================== CMD =====================
@echo on
del /s /f /q %M2_REPOSITORY_DIR_WIN%\org\apache\ignite
md %M2_REPOSITORY_DIR_WIN%\org\apache\ignite
xcopy repository\* %M2_REPOSITORY_DIR_WIN%\org\apache\ignite\ /s
exit /b
BATCH


#  ==================== SH ======================
set -x


rm -rf %M2_REPOSITORY_DIR_LIN%/org/apache/ignite
mkdir -p %M2_REPOSITORY_DIR_LIN%/org/apache/ignite
cp -rf repository/* %M2_REPOSITORY_DIR_LIN%/org/apache/ignite/]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_90" name="Run Python tests" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/usr/bin/env bash
set -o nounset; set -o errexit; set -o pipefail; set -o errtrace; set -o functrace
set -x


# Run tests
#python3 ./setup.py pytest --addopts="--examples" || exit 1
tox -e codestyle,py38 || exit 1]]></param>
          <param name="teamcity.build.workingDir" value="%VCS_ROOT_PYTHON%" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_91" name="Start Ignite node with SSL" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/usr/bin/env bash
set -o nounset; set -o errexit; set -o pipefail; set -o errtrace; set -o functrace
set -x


# Run Apache Ignite node
bash %system.teamcity.build.checkoutDir%/bin/ignite.sh %env.PYTHON_TEST_CONFIG_PATH%/ssl.xml &
sleep %IGNITE_INIT_TIME%]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_92" name="Run Python tests - SSL" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/usr/bin/env bash
set -o nounset; set -o errexit; set -o pipefail; set -o errtrace; set -o functrace
set -x


# Run tests
python3 ./setup.py pytest --addopts="--use-ssl=True --ssl-certfile=%env.PYTHON_TEST_CONFIG_PATH%/ssl/client_full.pem" || exit 1]]></param>
          <param name="teamcity.build.workingDir" value="%VCS_ROOT_PYTHON%" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_94" name="Stop Ignite node with SSL" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/usr/bin/env bash
set -o nounset; set -o errexit; set -o pipefail; set -o errtrace; set -o functrace
set -x


# Stop node by it's PID (if it was not killed previously)
ps ax | grep ignite.sh | sed '$d' | awk {'print $1'} | while read pid; do
    kill -9 ${pid} || true
done]]></param>
          <param name="teamcity.step.mode" value="execute_always" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_266" name="Post-build cleanup" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[:<<BATCH


:: ==================== CMD =====================
@echo on
exit /b
BATCH


#  ==================== SH ======================
set -x


# Kill remaining nodes
echo "Killing CommandLineStartup processes"
for PID in $(%env.JAVA_HOME%/bin/jps | grep CommandLineStartup | awk '{ print $1 }')
do
    echo -n "    Killing remaining node process with PID ${PID}... "
    kill -9 ${PID} && echo "[OK]" || {
        echo "[ERROR] Unable to kill process ${PID}" && exit 1
    }
done
echo

# Finalize IPC cleaning
echo "Cleaning IPC resources"
for param in m s
do
    for ipcs in $(ipcs -${param} | grep 'teamcity' | awk '{ print $2 }')
    do
        ipcrm -${param} ${ipcs} || {
            echo "[ERROR] Unable to remove ${param}/${ipcs}" && exit 1
        }
    done
done
echo

# Fail build if some IPC still remains
if [ $(ipcs | grep teamcity | wc -l) -ne 0 ]
then
    echo "[ERROR] Failing build because of remaining IPC resources" >&2
    exit 1
fi

# Kill IgniteNodeRunner
echo "Killing IgniteNodeRunner processes (after tests)"
for PID in $(%env.JAVA_HOME%/bin/jps | grep IgniteNodeRunner | awk '{ print $1 }')
do
    echo -n "    Killing process with PID ${PID}... "
    kill -9 ${PID} && echo "[OK]" || {
        echo "[ERROR] Unable to kill process ${PID}" && exit 1
    }
done]]></param>
          <param name="teamcity.step.mode" value="execute_always" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="GitHubApacheIgnitePythonThinClient">
        <checkout-rule rule="+:. =&gt; %VCS_ROOT_PYTHON%" />
      </vcs-entry-ref>
    </vcs-settings>
    <requirements>
      <equals id="RQ_35" name="teamcity.agent.jvm.os.name" value="Linux" />
    </requirements>
    <build-triggers />
    <cleanup />
  </settings>
</build-type>

